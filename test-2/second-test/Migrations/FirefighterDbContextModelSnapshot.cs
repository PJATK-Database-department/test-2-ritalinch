// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using second_test.Contexts;

#nullable disable

namespace second_test.Migrations
{
    [DbContext(typeof(FirefighterDbContext))]
    partial class FirefighterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("s23499")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FirefighterAction", b =>
                {
                    b.Property<int>("IdFirefighter")
                        .HasColumnType("int");

                    b.Property<int>("IdAction")
                        .HasColumnType("int");

                    b.HasKey("IdFirefighter", "IdAction")
                        .HasName("Firefighter_Action_pk");

                    b.HasIndex("IdAction");

                    b.ToTable("Firefighter_Action", "s23499");
                });

            modelBuilder.Entity("second_test.Models.Action", b =>
                {
                    b.Property<int>("IdAction")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("NeedSpecialEquipment")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime");

                    b.HasKey("IdAction")
                        .HasName("Action_pk");

                    b.ToTable("Action", "s23499");
                });

            modelBuilder.Entity("second_test.Models.Firefighter", b =>
                {
                    b.Property<int>("IdFirefighter")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdFirefighter")
                        .HasName("Firefighter_pk");

                    b.ToTable("Firefighter", "s23499");
                });

            modelBuilder.Entity("second_test.Models.FireTruck", b =>
                {
                    b.Property<int>("IdFireTruck")
                        .HasColumnType("int");

                    b.Property<string>("OperationalNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("SpecialEquipment")
                        .HasColumnType("bit");

                    b.HasKey("IdFireTruck")
                        .HasName("FireTruck_pk");

                    b.ToTable("FireTruck", "s23499");
                });

            modelBuilder.Entity("second_test.Models.FiretruckAction", b =>
                {
                    b.Property<int>("IdFireTruckAction")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssignmentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("IdAction")
                        .HasColumnType("int");

                    b.Property<int>("IdFireTruck")
                        .HasColumnType("int");

                    b.HasKey("IdFireTruckAction")
                        .HasName("Firetruck_Action_pk");

                    b.HasIndex("IdAction");

                    b.HasIndex("IdFireTruck");

                    b.ToTable("Firetruck_Action", "s23499");
                });

            modelBuilder.Entity("FirefighterAction", b =>
                {
                    b.HasOne("second_test.Models.Action", null)
                        .WithMany()
                        .HasForeignKey("IdAction")
                        .IsRequired()
                        .HasConstraintName("Firefighter_Action_Action");

                    b.HasOne("second_test.Models.Firefighter", null)
                        .WithMany()
                        .HasForeignKey("IdFirefighter")
                        .IsRequired()
                        .HasConstraintName("Firefighter_Action_Firefighter");
                });

            modelBuilder.Entity("second_test.Models.FiretruckAction", b =>
                {
                    b.HasOne("second_test.Models.Action", "IdActionNavigation")
                        .WithMany("FiretruckActions")
                        .HasForeignKey("IdAction")
                        .IsRequired()
                        .HasConstraintName("Firetruck_Action_Action");

                    b.HasOne("second_test.Models.FireTruck", "IdFireTruckNavigation")
                        .WithMany("FiretruckActions")
                        .HasForeignKey("IdFireTruck")
                        .IsRequired()
                        .HasConstraintName("Firetruck_Action_FireTruck");

                    b.Navigation("IdActionNavigation");

                    b.Navigation("IdFireTruckNavigation");
                });

            modelBuilder.Entity("second_test.Models.Action", b =>
                {
                    b.Navigation("FiretruckActions");
                });

            modelBuilder.Entity("second_test.Models.FireTruck", b =>
                {
                    b.Navigation("FiretruckActions");
                });
#pragma warning restore 612, 618
        }
    }
}
